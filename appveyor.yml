environment:
  matrix:
    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python

      #    - PYTHON_VERSION: 3.4
      #      MINICONDA: "C:\\Miniconda3"
      #    - PYTHON_VERSION: 3.5
      #      MINICONDA: "C:\\Miniconda3"
      #    - PYTHON_VERSION: 3.6
      #      MINICONDA: "C:\\Miniconda3"
    - PYTHON_VERSION: 3.5
      MINICONDA: "C:\\Miniconda35-x64"  # x64 produces access violations

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda info msvc_runtime
    #  - "conda create -q -n test-environment python=%PYTHON_VERSION% wheel setuptools Cython nose msvc_runtime numpy scipy"
    #  - activate test-environment
  - conda install wheel setuptools Cython nose numpy scipy"

build: off

test_script:
  # pyamg isn't available as a Python 3 version in the conda repository,
  # so exclude the relaxation test
  - python setup.py nosetests --exclude test_relaxation

after_test:
  # build the wheels
  - python setup.py bdist_wheel

artifacts:
  # bdist_wheel puts the built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
